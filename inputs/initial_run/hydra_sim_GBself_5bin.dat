# This file was created using create_datpin_files.R function write_DatFile
      #and used all inputs from csv files found in folder:
      #hydradata/data-raw
# init_int debug
  4
# init_int Nyrs
  42
# init_int Nspecies
  4
# init_int Nsizebins
  5
# init_int Nareas
  1
# init_int Nfleets
  2
# init_int Nsurveys (e.g. NEFSC spring, NEFSC fall, NEAMAP, etc)
  2
# init_number wtconv
  1
## Time series data file
  hydra_sim_GBself_5bin-ts.dat
#
# List of Species in Model
# Atlantic_cod
# Atlantic_herring
# Atlantic_mackerel
# Spiny_dogfish

# init_matrix binwidth(1,Nspecies,1,Nsizebins)
 	29	29	29	29	29
 	8	8	8	8	8
 	12	12	12	12	12
 	30	30	30	30	30
# init_vector lenwt_a(1,Nspecies)
  0.00685681567472357 0.00696289397647208 0.00310242979734439 0.00218691346582327
# init_vector lenwt_b(1,Nspecies)
  3.09133638752902 3.08159581281283 3.32100440840157 3.13962578098272
# init_int Nrecruitment_cov
  1
#  init_int Nmaturity_cov
  1
#  init_int Ngrowth_cov
  1
#  init_matrix recruitment_cov(1,Nrecruitment_cov,1,Nyrs)
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_matrix maturity_cov(1,Nmaturity_cov,1,Nyrs)
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_matrix growth_cov(1,Ngrowth_cov,1,Nyrs)
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_3darray obs_effort(1,Nareas,1,Nfleets,1,Nyrs)
# fleet types demersal pelagic
#  Observed effort. No assessment
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
  1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
#  init_4darray area1_stomwt(1,Nareas,1,Nspecies,1,Nyrs,Nsizebins)
#  read in mean stomach content weight time series from .dat file for intake calculation
#  Atlantic_cod
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
  0.035 0.103736364 1.952671779 18.42060702 84.48736889
#  Atlantic_herring
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
  0.01 0.03 0.8 1.5 3
#  Atlantic_mackerel
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
  0.01 0.08 1.3 2 3
#  Spiny_dogfish
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
  0.090189781 1.952671779 9.334322368 28.80493233 77.55885308
#   init_matrix obs_temp(1,Nareas,1,Nyrs)
#  Either observed temperature  or manufactured temperature for simulation runs
#1977 to 1997 Georges Bank bottom temp from 2011 ESR (1964-1976 set to 8.0) and 1998 to 2010 Georges Bank bottom temp from 2011 ESR
  8.69398 9.08885 8.74414285714286 8.868 8.55206666666667 9.43436666666667 9.26516666666667 9.69548 9.1646 8.274075 8.52445 8.32313333333333 8.99702857142857 8.79641428571429 8.26319 8.48561666666667 9.46302222222222 9.72635333333333 8.42418666666667 8.99431 9.18441538461539 9.96980714285714 9.25267142857143 9.30151111111111 9.9935875 8.71782222222222 7.99782857142857 8.4206 9.3799 8.41815 8.95543333333333 9.0541625 9.2831125 9.8491375 10.4877555555556 9.95232857142857 9.671 9.63732 10.31192 9.5166 9.99688 9.77481666666667
#  init_int yr1Nphase            //year 1 N at size estimation phase
  1
#  init_int recphase        //recruitment parameter estimation phas
  -1
#  init_int avg_rec_phase   //average recruitment estimation phase (could make species specific, currently global)
  1
#  init_int recsigmaphase     //st dev of recruitment devs phase
  -1
#  init_int avg_F_phase     //average fishing mort estimation phase (could make species specific, currently global)
  1
#  init_int dev_rec_phase   //recruitment deviation estimation phase (could make species specific, currently global)
  4
#  init_int dev_F_phase     //fishing mort deviation estimation phase (could make species specific, currently global)
  2
#  init_int fqphase              //fishery q estimation phase
  1
# init_int fsphase               //fishery selectivity estimation phase
  2
#  init_int sqphase              //survey q estimation phase
  1
# init_int ssphase               //survey selectivity estimation phase
  1
#   init_int ssig_phase           //survey sigma (obs error) phase
  -1
#  init_int csig_phase           //catch sigma (obs error) phase
  -1
#  init_int m1_phase            // M1 phase
  -1
#  init_int oF1_phase           // amount of other food included in the M2 term for the base (predator 1) phase
  -1
#   init_int oFdev_phase          //deviation from base other food for predators 2+ phase
  -1
#   init_int vuln_phase // phase for vulnerability parameters
  -1
#  init_matrix recGamma_alpha(1,Nareas,1,Nspecies)      //eggprod gamma Ricker model alpha
  1 1 1 1
#  init_matrix recGamma_shape(1,Nareas,1,Nspecies)      //eggprod gamma Ricker model shape parameter
  1 1 1 1
#  init_matrix recGamma_beta(1,Nareas,1,Nspecies)     //eggprod gamma Ricker model beta
  1 1 1 1
#  init_matrix recDS_alpha(1,Nareas,1,Nspecies)   //SSB Deriso-Schnute model alpha
  1 1 1 1
#  init_matrix recDS_shape(1,Nareas,1,Nspecies)   //SSB Deriso-Schnute model shape parameter
  1 1 1 1
#  init_matrix recDS_beta(1,Nareas,1,Nspecies)      //SSB Deriso-Schnute model beta
  1 1 1 1
#  init_matrix recGamSSB_alpha(1,Nareas,1,Nspecies)   //SSB gamma alpha
  1 1 1 1
#  init_matrix recGamSSB_shape(1,Nareas,1,Nspecies)   //SSB gamma shape parameter
  1 1 1 1
#  init_matrix recGamSSB_beta(1,Nareas,1,Nspecies)      //SSB gamma model beta
  1 1 1 1
#  init_matrix recRicker_alpha(1,Nareas,1,Nspecies)   //SSB Ricker model alpha
  1 1 1 1
#  init_matrix recRicker_shape(1,Nareas,1,Nspecies)   //SSB Ricker model shape parameter=1.0, not used
  1 1 1 1
#  init_matrix recRicker_beta(1,Nareas,1,Nspecies)      //SSB Ricker model beta
  1 1 1 1
#  init_matrix recBH_alpha(1,Nareas,1,Nspecies)   //SSB Beverton Holt model alpha
  1 1 1 1
#  init_matrix recBH_shape(1,Nareas,1,Nspecies)   //SSB Beverton Holt model shape parameter=1.0, not used
  1 1 1 1
#  init_matrix recBH_beta(1,Nareas,1,Nspecies)      //SSB Beverton Holt model beta
  1 1 1 1
#  init_matrix recShepherd_alpha //SSB S-R Shepherd 3 param
  1 1 1 1
#  init_matrix recShepherd_shape //SSB S-R Shepherd 3 param
  1 1 1 1
#  init_matrix recShepherd_beta //SSB S-R Shepherd 3 param
  1 1 1 1
#  init_matrix recSHockey_alpha //SSB S-R Hockey 2 param
  1 1 1 1
#  init_matrix recHpockey_shape //SSB S-R Hockey. S* breakpoint
  1 1 1 1
#  init_matrix recHockey_beta //SSB S-R Hockey 2 param. This is not used
  1 1 1 1
#  init_matrix recSegmented_alpha //SSB S-R Segmented 3 param
  1 1 1 1
#  init_matrix recSegmented_shape //SSB S-R Segmented 3 param. Breakpoint
  1 1 1 1
#  init_matrix recSegmented_beta //SSB S-R Segmented 3 param
  1 1 1 1
#  init_ivector rectype(1,Nspecies)  //switch for alternate recruitment functions 1=gamma/Ricker, 2=Deriso-Schnute, 9=avg+devs
# 3=SSB gamma, 4=SSB Ricker, 5=SSB Beverton Holt added April 2014,6=Shepherd (added Beet Mar 2017)
  9 9 9 9
#   init_ivector stochrec(1,Nspecies)  //switch for stochastic recruitment. 1 = add error, 0= no error
  0 0 0 0
#  init_matrix sexratio(1,Nareas,1,Nspecies)  // this is proportion females
  0.5 0.5 0.5 0.5
 #  init_matrix recruitment_covwt(1,Nspecies,1,Nrecruitment_cov)	//recruitment covariate weighting factor
  0
  0
  0
  0
#//fecundity parameters from .dat file and calculate fecundity at length
#  init_matrix fecund_d(1,Nareas,1,Nspecies)
  1 1 1 1
#  init_matrix fecund_h(1,Nareas,1,Nspecies)
  1 1 1 1
#  init_3darray fecund_theta(1,Nareas,1,Nspecies,1,Nsizebins))
  0 0 0 0 0
  0 0 0 0 0
  0 0 0 0 0
  0 0 0 0 0
#  init_matrix maturity_nu(1,Nareas,1,Nspecies)
  1 1 1 1
#  init_matrix maturity_omega(1,Nareas,1,Nspecies)
  1 1 1 1
#  init_matrix maturity_covwt(1,Nspecies,1,Nmaturity_cov) //maturity covariate weighting factor
  0
  0
  0
  0
#//growth parameters from .dat file and calculate simple (no cov) prob of growing through length interval
#  init_matrix growth_psi(1,Nareas,1,Nspecies)
  22.31730855 11.65211497 20.48292586 11.28075301
#  init_matrix growth_kappa(1,Nareas,1,Nspecies)
  0.734859369 0.456436561 0.26327238 0.688187
#  init_matrix growth_covwt(1,Nspecies,1,Ngrowth_cov)// growth covariate weighting factor
  0
  0
  0
  0
#  init_matrix vonB_Linf(1,Nareas,1,Nspecies)    //alternate parameterization, vonB growth
  113.5946212 29.05066434 43.2563036 99.99
#  init_matrix vonB_k(1,Nareas,1,Nspecies)       //alternate parameterization, vonB growth
  0.197508768 0.45225377 0.205956533 0.1
#  init_vector growthtype                           //switch for alternate growth types,
#1 power, 2 power/covariates, 3 vonB, 4 vonB covariates
  3 3 3 3
#  init_number phimax
  1
#  init_matrix intake_alpha(1,Nareas,1,Nspecies)
  0.004 0.004 0.004 0.004
#  init_matrix intake_beta(1,Nareas,1,Nspecies)
  0.11 0.11 0.11 0.11
  
#  init_3darray isprey(1,Nareas,1,Nspecies,1,Nspecies)     //preds in columns, prey in rows
  1 0 0 1
  1 1 1 1
  1 0 0 1
  1 0 0 1
#  init_matrix preferred_wtratio(1,Nareas,1,Nspecies)     //pred sizebins
  0.5 0.5 0.5 0.5
#  init_vector sd_sizepref(1,Nspecies)              //pred sizebins
  2 2 2 2
# Following content added after ICES publication by Gaichas et al. 2014
# Made by Andy Beet from Dec 2016 onward
# Equilibrium Biomass. B0(1,Nspecies). Tthese values are obtained by running hydra_sim without any error and zero fishing effort
  40492.1504465078 505.36938141088 528.887106715519 49621.132793312
#number of Guilds numGuilds.
  4
#Guild Membership guildMembership.
  1 2 3 4
#Fleet Membership fleetMembers(1,Nguilds)
  1 2 2 1
# AssessmentPeriod. Time period (yrs) to assess guild biomass level
  3
# init_int flagLinearRamp. // 0 = step function, 1 = linear function
  1
#init_vector minExploitation(1,Nfleets) minimum Exploitation rates imposed by each fleet
  1e-05 1e-05
#init_vector maxExploitation(1,Nfleets) maximum Exploitation rates imposed by each fleet
  0.999 0.999
# init_vector minMaxExploitation(1,2) - [MinExploitation, MaxExploitation
  0.05 0.05
# init_vector minMaxThreshold(1,2) - [MinThreshold, MaxThreshold
  0.1 0.4
# Nthresholds. number of thresholds used for change in exploitation/fishing - Step function
  5
# threshold_percent(1,Nthresholds) threshold %ages (of biomass) when action is taken - Step function
# note that must appear in ascending order
  0.1 0.2 0.3 0.4 1e+06
# exploitation_levels(1,Nthresholds). these must pair with the threshold_percent values - Step function
  0.05 0.05 0.05 0.05 0.05
# threshold_species(1,Nspecies). Species level detection threshold
  0 0 0 0
# int AssessmentOn. Assessment On or Off
  0
# int speciesDetection. include species (in addition to guild) in assessment on or off
  0
# int LFI_size. (cm). Threshold to determin a large fish. used in LFI metric
  60
# init_number scaleInitialN.  used to scale initial yr1N abundances found in .pin file
  1
# other food term
#  1e+09
#init_matrix effortScaled(1,Nareas,1,Nspecies)
  1 1 1 1
# init_4darray discard_Coef(1,Nareas,1,Nspecies,1,Nfleets,1,Nsizebins)
# proportion of each species that is discarded for each fleet(Bottom, Pelagic, Fixed)
# Atlantic_cod fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
# Atlantic_herring fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
# Atlantic_mackerel fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
# Spiny_dogfish fleet x sizeclass
  0 0 0 0 0
  0 0 0 0 0
# init_4darray discardSurvival_Coef(1,Nareas,1,1,Nspecies,1,Nfleets,1,Nsizebins)
# proportion of discards that survive being thrown back
# Atlantic_cod fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
# Atlantic_herring fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
# Atlantic_mackerel fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
# Spiny_dogfish fleet x sizeclass
  1 1 1 1 1
  1 1 1 1 1
# predOrPrey(1,Nspecies). binary vector indicating predators. inverse = prey
  1 1 1 1
# bandwidth_metric. (in yrs) for variance estimate of catch - moving window
  5
# init_number baseline_threshold // value of threshold that we stop landing catch. Typically 0.2
  0.2
# init_3darray indicator_fishery_q(1,Nareas,1,Nfleets,1,Nspecies)
# which species represent targeted catch. These are used to estmate exploitation rate in assessment
  1 0 0 1
  0 1 1 0
# AR_parameters(1,3) Survey, recruitment, Catch
  0 0 0
# init_int flagMSE determins level of output (0 or 1)
  0
#  init_matrix catchProportion(1,Nareas,1,Nspecies). Proportion of the year in which resides in the management area
  1 1 1 1
# init_matrix areaMortality(1,Nareas,1,Nspecies). Total mortality outside of areae management area
  0 0 0 0
# m1_change_yr
  43
# m1_multiplier
  1
# of_change_yr
  43
# of_multiplier
  1
# use annual q? (0 = fixed over time, 1 = annual parameter vector)
  0
# eof
54321
